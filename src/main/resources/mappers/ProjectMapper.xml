<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProjectMapper">

    <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
    <resultMap id="ProjectMap"
        type="kr.co.wesellglobal.sellermatch.model.ProjectDto">
        <result property="projIdx"   column="proj_idx" />
        <result property="projId"   column="proj_id" />
        <result property="projMemId"   column="proj_mem_id" />
        <result property="projTitle"   column="proj_title" />
        <result property="projSort"   column="proj_sort" />
        <result property="projIndus" column="proj_indus" />
        <result property="projPrice" column="proj_price" />
        <result property="projMargin" column="proj_margin" />
        <result property="projNation" column="proj_nation" />
        <result property="projSupplyType" column="proj_supply_type" />
        <result property="projRecruitNum" column="proj_recruit_num" />
        <result property="projDetail" column="proj_detail" />
        <result property="projDetailImg" column="proj_detail_img" />
        <result property="projRequire" column="proj_require" />
        <result property="projKeyword" column="proj_keyword" />
        <result property="projFile" column="proj_file" />
        <result property="projProdCerti" column="proj_prod_certi" />
        <result property="projState" column="proj_state" />
        <result property="projRegDate" column="proj_reg_date" />
        <result property="projEndDate" column="proj_end_date" />
        <result property="projEditDate" column="proj_edit_date" />
        <result property="projIndusName" column="proj_indus_name" />
        <result property="projKeyword" column="proj_keyword" />
        <result property="projDetailImgList" column="proj_detail_img_list" />
        <result property="projHit" column="proj_hit" />
        <result property="projChannel" column="proj_channel" />
        <result property="applyCount" column="apply_count" />
        <result property="ppBizCerti" column="pp_biz_certi" />
        <result property="ppProfit" column="pp_profit" />
        <result property="sellerChChk" column="seller_ch_chk" />
        <result property="sellerSaleChk" column="seller_sale_chk" />
        <result property="memRname" column="mem_rname" />
        <result property="projXxx" column="proj_XXX" />
    </resultMap>
    
    <insert id="insertItem"
    	parameterType="kr.co.wesellglobal.sellermatch.model.ProjectDto"
    	useGeneratedKeys="true"
    	keyProperty="projIdx">
    	INSERT INTO ProjectList
    		(`proj_id`, `proj_mem_id`, `proj_title`, `proj_sort`, `proj_indus`, `proj_price`, `proj_margin`, 
    		`proj_nation`, `proj_supply_type`, `proj_recruit_num`, `proj_detail`, `proj_detail_img`, `proj_require`, `proj_keyword`, `proj_file`, 
    		`proj_state`, `proj_reg_date`, `proj_end_date`, `proj_edit_date`, `proj_prod_certi`, `proj_hit`, `proj_channel`)
    	 VALUES 
    	 	(#{projId}, #{projMemId}, #{projTitle}, #{projSort}, #{projIndus}, #{projPrice}, #{projMargin}, 
    	 	#{projNation}, #{projSupplyType}, #{projRecruitNum}, #{projDetail}, #{projDetailImg}, #{projRequire}, #{projKeyword}, 
    	 	#{projFile}, #{projState}, now(), #{projEndDate}, #{projEditDate}, #{projProdCerti}, #{projHit}, #{projChannel});
    </insert>
    
    <update id="updateItem" parameterType="kr.co.wesellglobal.sellermatch.model.ProjectDto">
		UPDATE ProjectList 
		SET 
		    proj_mem_id = #{projMemId}, proj_title = #{projTitle}, proj_sort = #{projSort}, proj_indus = #{projIndus}, 
		    proj_price = #{projPrice}, proj_margin = #{projMargin}, proj_nation = #{projNation}, proj_supply_type = #{projSupplyType}, 
		    proj_recruit_num = #{projRecruitNum}, proj_detail = #{projDetail}, proj_require = #{projRequire}, proj_keyword = #{projKeyword},
		    proj_hit = #{projHit}, proj_channel = #{projChannel}
		    <if test="projEndDate !='' and projEndDate != null">
		    	proj_end_date = #{projEndDate}, 
		    </if>
		    <if test="projDetailImg !='' and projDetailImg != null">
		    	 proj_detail_img = #{projDetailImg},
		    </if> 
		    <if test="projFile != '' and projFile != null">
		    	proj_file = #{projFile}, 
		    </if>
		    proj_prod_certi = #{projProdCerti}, proj_state = #{projState}, proj_edit_date = now()
		where proj_id = #{projId}
	</update>
    
    <select id="selectList"
    	parameterType="kr.co.wesellglobal.sellermatch.model.ProjectDto"
    	resultMap="ProjectMap">
    	SELECT DISTINCT
	   		proj_idx, proj_id, proj_mem_id, proj_title, proj_sort, i.indus_name as proj_indus_name, proj_indus, proj_price, proj_margin, 
    		proj_nation, proj_supply_type, proj_recruit_num, proj_detail, proj_detail_img, proj_require, 
    		proj_keyword, proj_file, proj_prod_certi, proj_state, proj_reg_date, proj_hit,
    		date_format(proj_end_date, '%Y-%m-%d') as proj_end_date, proj_edit_date, 
    		(SELECT COUNT(*) FROM ApplyList where apply_proj_id = p.Proj_id) as apply_count, 
    		m.mem_rname as mem_rname, proj_channel
    		<if test="ppBizCerti != '' and ppBizCerti != null">
	        	, (SELECT pp_biz_certi from PpProfile where pp_mem_id = proj_mem_id) as pp_biz_certi
	        </if>
	        <if test="ppProfit != '' and ppProfit != null">
	        	, (SELECT pp_profit from PpProfile where pp_mem_id = proj_mem_id) as pp_profit
	        </if>
	        <if test="sellerBizCerti != '' and sellerBizCerti != null">
	        	, (SELECT seller_biz_certi from SellerProfile where seller_mem_id = proj_mem_id) as seller_biz_certi
	        </if>
	        <if test="sellerChChk != '' and sellerChChk != null">
	        	, (SELECT seller_ch_chk from SellerProfile where seller_mem_id = proj_mem_id) as seller_ch_chk
	        </if>
	        <if test="sellerSaleChk != '' and sellerSaleChk != null">
	        	, (SELECT seller_sale_chk from SellerProfile where seller_mem_id = proj_mem_id) as seller_sale_chk
	        </if>
    	FROM ProjectList p
		INNER JOIN IndusList i
		ON p.proj_indus = i.indus_id
		INNER JOIN MemList m
		ON p.proj_mem_id = m.mem_id
		INNER JOIN PpProfile pp
		ON p.proj_xxx = pp.Pp_xxx
		INNER JOIN SellerProfile sp
		ON p.proj_xxx = sp.seller_xxx
        <where>
        	<if test="projDetail != '' and projDetail != null">
        		OR proj_detail LIKE concat('%', #{projDetail}, '%')
        	</if>
        	<if test="projIndusName != '' and projIndusName != null">
        		OR i.indus_name LIKE concat('%', #{projIndusName}, '%')
        	</if>
        	<if test="projKeyword != '' and projKeyword != null">
        		OR proj_keyword LIKE concat('%', #{projKeyword}, '%')
        	</if>
        	<if test="projMemId != '' and projMemId != null">
        		OR proj_mem_id LIKE concat('%', #{projMemId}, '%')
        	</if>
        	<if test="projTitle != '' and projTitle != null">
        		OR proj_title LIKE concat('%', #{projTitle}, '%')
        	</if>
        	
        	<if test="projSort != '' and projSort != null">
        		AND proj_sort = #{projSort}
        	</if>
        	
        	<if test="projNationArr != '' and projNationArr != null">
        		AND proj_nation IN
	            <foreach collection="projNationArr" item="item" index="index" open="(" close=")" separator=",">
	            	#{item}
	            </foreach>
        	</if>
        	
        	<if test="projIndusArr != '' and projIndusArr != null">
        		AND proj_indus IN
	            <foreach collection="projIndusArr" item="item" index="index" open="(" close=")" separator=",">
	            	#{item}
	            </foreach>
        	</if>
        	
        	<if test="projPriceArr != '' and projPriceArr != null">
	            <foreach collection="projPriceArr" item="item" index="index">
	            	<if test="item != '100000'">
	            		AND proj_price <![CDATA[ <= ]]> #{item}
	            	</if>
	            	<if test="item == '100000'">
	            		AND proj_price <![CDATA[ >= ]]> #{item}
	            	</if>
	            </foreach>
        	</if>
        	
        	<if test="projMarginArr != '' and projMarginArr != null">
        		AND proj_margin IN
	            <foreach collection="projMarginArr" item="item" index="index" open="(" close=")" separator=",">
	            	#{item}
	            </foreach>
        	</if>
        	
        	<if test="projSupplyTypeArr != '' and projSupplyTypeArr != null">
        		AND proj_supply_type IN
	            <foreach collection="projSupplyTypeArr" item="item" index="index" open="(" close=")" separator=",">
	            	#{item}
	            </foreach>
        	</if>
        	
        	<if test="projProdCerti != '' and projProdCerti != null">
        		AND proj_prod_certi = #{projProdCerti}
        	</if>
        	
        	<if test="ppBizCerti != '' and ppBizCerti != null">
        		AND pp_biz_certi = #{ppBizCerti}
        		AND EXISTS(SELECT pp_biz_certi from PpProfile where pp_mem_id = proj_mem_id)
        	</if>
        	
        	<if test="ppProfit != '' and ppProfit != null">
        		AND pp_profit = #{ppProfit}
        		AND EXISTS(SELECT pp_profit from PpProfile where pp_mem_id = proj_mem_id)
        	</if>
        	
        	<if test="sellerBizCerti != '' and sellerBizCerti != null">
        		AND seller_biz_certi = #{sellerBizCerti}
        		AND EXISTS(SELECT seller_biz_certi from SellerProfile where seller_mem_id = proj_mem_id)
        	</if>
        	
        	<if test="sellerChChk != '' and sellerChChk != null">
        		AND seller_ch_chk = #{sellerChChk}
        		AND EXISTS(SELECT seller_ch_chk from SellerProfile where seller_mem_id = proj_mem_id)
        	</if>
        	
        	<if test="sellerSaleChk != '' and sellerSaleChk != null">
        		AND seller_sale_chk = #{sellerSaleChk}
        		AND EXISTS(SELECT seller_sale_chk from SellerProfile where seller_mem_id = proj_mem_id)
        	</if>
        	
        	<if test="projChannelArr != '' and projChannelArr != null">
	            <foreach collection="projChannelArr" item="item" index="index">
	            	 AND proj_channel Like concat('%', #{item}, '%')
	            </foreach>
        	</if>
        	
        	<if test="sellerMemRname != '' and sellerMemRname != null and ppMemRname != '' and ppMemRname != null">
		    	AND mem_rname = #{sellerMemRname} AND proj_sort = "2"
		    	OR mem_rname = #{ppMemRname} AND proj_sort = "1"
        	</if>
        	
        	<if test="ppMemRname != '' and ppMemRname != null and sellerMemRname == null">
		    	AND mem_rname = #{ppMemRname} AND proj_sort = "1"
        	</if>
        	
        	<if test="sellerMemRname != '' and sellerMemRname != null and ppMemRname == null">
		    	AND mem_rname = #{sellerMemRname} AND proj_sort = "2"
        	</if>
        	
        </where>
        ORDER BY proj_idx DESC
        
        <if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
		
    </select>
    
    <select id="selectItem"
    	parameterType="kr.co.wesellglobal.sellermatch.model.ProjectDto"
    	resultMap="ProjectMap">
    	SELECT 
    		proj_id, proj_mem_id, proj_title, proj_sort, proj_indus, proj_price, proj_margin, 
    		proj_nation, proj_supply_type, proj_recruit_num, proj_detail, proj_detail_img as proj_detail_img_list, proj_require, proj_keyword, proj_file, 
    		proj_hit, proj_prod_certi, proj_state, proj_reg_date, date_format(proj_end_date, '%Y-%m-%d') as proj_end_date, proj_edit_date, proj_channel
    	FROM ProjectList
    	WHERE proj_id = #{projId}
    </select>
    
    <!-- 프로젝트조회 데이터 수 조회 -->
	<select id="selectCountAll"
		parameterType="kr.co.wesellglobal.sellermatch.model.ProjectDto"
		resultType="int">
		SELECT COUNT(*)
		FROM ProjectList p
        INNER JOIN IndusList i
        ON p.proj_indus = i.indus_id
		<where>
        	<if test="projDetail != '' and projDetail != null">
        		OR proj_detail LIKE concat('%', #{projDetail}, '%')
        	</if>
        	<if test="projIndusName != '' and projIndusName != null">
        		OR i.indus_name LIKE concat('%', #{projIndusName}, '%')
        	</if>
        	<if test="projKeyword != '' and projKeyword != null">
        		OR proj_keyword LIKE concat('%', #{projKeyword}, '%')
        	</if>
        	<if test="projMemId != '' and projMemId != null">
        		OR proj_mem_id LIKE concat('%', #{projMemId}, '%')
        	</if>
        	<if test="projTitle != '' and projTitle != null">
        		OR proj_title LIKE concat('%', #{projTitle}, '%')
        	</if>
        </where>
	</select>

</mapper>